# Diffrence between rc & replicaset
# so there is no major diffrence will copy the rc file --> rs.yml

apiVersion: apps/V1
kind: ReplicaSet
metadata:
  name: bgmi-ms-app
  labels:
    app: bgmi-ms-app
# here we didn't specify the namespace, get default
spec:  # we specify the pods, pods template.
  replicas: 3 # creating the 3 replica of pod
  selector:  # here we mention the label to refer the pod
    matchExpressions:
      - {key: app, operator: In, values: [bgmi-ms-app]}
  template: #so I directly copy the pods details from pod-manifest.yml file, from metadata
    metadata: 
        name: bgmi-ms-pod
        labels: 
          env: uat-env
          app: bgmi-ms-app 
        # namespace: uat
    spec: 
      containers:
        - name: bgmi-ms-nginx-instance
          image: nginx
          ports:
            - name: http
              containerPort: 80
            # - name: eb-tomcat-instance
            #   image: tomcat
            #   ports:
            #     - name: java
            #       containerPort: 8080
# now, on that pod we need a svc-manifest.yml fil because we need to expose the svc
...

---
# copying svc-manifest.yml file
# svc-manifest for NodePort
apiVersion: v1
kind: Service
metadata:
  name: bgmi-ms-pod-service
  labels:
    env: uat-env
    app: bgmi-ms-app 
  # namespace: uat #<ns-name>
spec:
  type: NodePort
  selector:
    app: bgmi-ms-app #[app: eb-ms-app]
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    # - name: http
    #   protocol: TCP
    #   port: 8080
    #   targetPort: 8080
...

# kubectl apply -f rs.manifest.yml
# kubectl get all
# kubectl scale rs <rs-name> --replica 10
# kubectl get all   ---> 5 replica is created of pod